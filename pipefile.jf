pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building..'
            }
        }
		
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
		
        stage('Test') {
            steps {
                echo 'Testing..'
                script {
                    def result = bat(script: '''
                        cd C:\\Users\\Jacky\\PycharmProjects\\pythonProject
                        C:\\Python311\\Scripts\\pytest.exe .\\newpytest.py --self-contained-html --html=pytest_html_report.html
                        echo %ERRORLEVEL%
                        copy pytest_html_report.html %WORKSPACE%\\pytest_html_report.html
                    ''', returnStdout: true).trim()

                    // Output the result for debugging
                    echo "Pytest output:\n${result}"

                    // Extract and process the ERRORLEVEL
                    def lines = result.split('\r?\n')
                    def pytestStatus = lines[-1].trim()
                    
                    echo "Pytest exited with status: ${pytestStatus}"
                    
                    if (pytestStatus != '0') {
                        currentBuild.result = 'FAILURE'
                        error "Pytest tests failed with status: ${pytestStatus}"
                    }
                }
                // Archive the HTML report
                archiveArtifacts artifacts: 'pytest_html_report.html', allowEmptyArchive: true
            }
        }
    }
}